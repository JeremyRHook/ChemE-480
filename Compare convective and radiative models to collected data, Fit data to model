{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "c6phZvd9Hk5u"
   },
   "source": [
    "# Lab 2, Part a\n",
    "\n",
    "In this lab, you will\n",
    "\n",
    "* Compare convective and radiative models to collected data\n",
    "* Fit data to model\n",
    "\n",
    "# Convective Heat Transfer\n",
    "\n",
    "In Lab 1, we fit data from the TCLab to the model:\n",
    "\n",
    "$$\\tau_p \\frac{dT}{dt} = (T_a - T) + K_p Q $$\n",
    "\n",
    "We are going to replace the model with the following physics-based model:\n",
    "\n",
    "$$m c_p \\frac{dT}{dt} = UA(T_a-T) + \\alpha Q $$\n",
    "\n",
    "where $m = 0.004 \\text{kg}$ is the weight of the heat sink being heated, $c_p = 500 \\text{J/kg-K}$ is the heat capacity of the heat sink, $T_a = 23 ^{\\circ}C$ is the ambient temperature, and $A=0.0012 \\text{m}^2$ is the heat transfer area of the heat sink.\n",
    "\n",
    "The model assumes that all heat loss is through natural convection with heat transfer coefficient $U=10\\  W/(m^2 \\cdot K)$ and the power output of the heater is controlled by the coefficient $\\alpha=0.01 W/\\%$.\n",
    "\n",
    "Run an experiment for 10 minutes with the heater set to 50% power. Compare the temperature from the model prediction to the raw data from the TCLab unit. You can either solve the differential equation analytically or numerically."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "id": "K5Z23yIsHk5w"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TCLab version 0.4.9\n",
      "Arduino Leonardo connected on port COM3 at 115200 baud.\n",
      "TCLab Firmware 3.0.0 Arduino Leonardo/Micro.\n",
      "25.217\n",
      "25.088\n",
      "25.378\n",
      "25.281\n",
      "25.475\n",
      "25.41\n",
      "25.217\n",
      "25.539\n",
      "25.539\n",
      "25.571\n",
      "25.732\n",
      "25.894\n",
      "26.216\n",
      "26.151\n",
      "26.184\n",
      "26.377\n",
      "26.377\n",
      "26.506\n",
      "26.538\n",
      "26.796\n",
      "26.828\n",
      "27.054\n",
      "27.086\n",
      "27.183\n",
      "27.183\n",
      "27.505\n",
      "27.666\n",
      "27.795\n",
      "27.892\n",
      "27.827\n",
      "28.053\n",
      "28.343\n",
      "28.343\n",
      "28.697\n",
      "28.762\n",
      "28.794\n",
      "29.052\n",
      "29.277\n",
      "29.277\n",
      "29.567\n",
      "29.793\n",
      "29.89\n",
      "29.986\n",
      "29.825\n",
      "30.341\n",
      "30.309\n",
      "30.405\n",
      "30.405\n",
      "30.856\n",
      "30.921\n",
      "31.05\n",
      "31.05\n",
      "31.308\n",
      "31.372\n",
      "31.662\n",
      "31.662\n",
      "31.662\n",
      "31.984\n",
      "31.92\n",
      "32.307\n",
      "32.274\n",
      "32.468\n",
      "32.597\n",
      "32.693\n",
      "32.919\n",
      "32.951\n",
      "33.209\n",
      "33.306\n",
      "33.402\n",
      "33.596\n",
      "33.563\n",
      "33.563\n",
      "33.95\n",
      "34.144\n",
      "34.079\n",
      "34.401\n",
      "34.176\n",
      "34.498\n",
      "34.563\n",
      "34.627\n",
      "34.917\n",
      "34.756\n",
      "35.014\n",
      "35.207\n",
      "35.11\n",
      "35.4\n",
      "35.497\n",
      "35.465\n",
      "35.884\n",
      "35.852\n",
      "35.948\n",
      "36.174\n",
      "36.142\n",
      "36.271\n",
      "36.496\n",
      "36.528\n",
      "36.593\n",
      "36.689\n",
      "36.883\n",
      "36.979\n",
      "36.979\n",
      "37.076\n",
      "37.366\n",
      "37.398\n",
      "37.302\n",
      "37.56\n",
      "37.753\n",
      "37.817\n",
      "37.882\n",
      "38.172\n",
      "38.107\n",
      "38.236\n",
      "38.462\n",
      "38.397\n",
      "38.397\n",
      "38.591\n",
      "38.688\n",
      "38.784\n",
      "39.074\n",
      "38.978\n",
      "39.042\n",
      "39.01\n",
      "39.139\n",
      "39.268\n",
      "39.396\n",
      "39.3\n",
      "39.751\n",
      "39.719\n",
      "39.751\n",
      "39.977\n",
      "39.944\n",
      "40.041\n",
      "40.041\n",
      "39.912\n",
      "40.17\n",
      "40.46\n",
      "40.492\n",
      "40.621\n",
      "40.718\n",
      "40.686\n",
      "40.589\n",
      "40.234\n",
      "40.492\n",
      "40.847\n",
      "40.041\n",
      "40.653\n",
      "40.653\n",
      "40.589\n",
      "40.814\n",
      "40.814\n",
      "40.653\n",
      "41.008\n",
      "41.04\n",
      "40.943\n",
      "41.362\n",
      "41.588\n",
      "41.556\n",
      "41.781\n",
      "41.942\n",
      "41.975\n",
      "42.007\n",
      "42.232\n",
      "42.168\n",
      "42.265\n",
      "42.361\n",
      "42.49\n",
      "42.329\n",
      "42.587\n",
      "42.651\n",
      "42.78\n",
      "42.845\n",
      "42.748\n",
      "42.909\n",
      "42.974\n",
      "42.941\n",
      "42.974\n",
      "43.006\n",
      "43.006\n",
      "43.006\n",
      "43.006\n",
      "43.07\n",
      "42.909\n",
      "42.877\n",
      "43.135\n",
      "43.296\n",
      "43.264\n",
      "43.425\n",
      "43.393\n",
      "43.521\n",
      "43.65\n",
      "43.586\n",
      "43.812\n",
      "43.876\n",
      "43.844\n",
      "43.876\n",
      "44.037\n",
      "44.23\n",
      "44.263\n",
      "44.263\n",
      "44.102\n",
      "44.263\n",
      "44.327\n",
      "44.295\n",
      "44.263\n",
      "44.359\n",
      "44.263\n",
      "44.263\n",
      "44.263\n",
      "44.424\n",
      "44.23\n",
      "44.456\n",
      "44.553\n",
      "44.327\n",
      "44.521\n",
      "44.682\n",
      "44.488\n",
      "44.714\n",
      "44.778\n",
      "44.907\n",
      "44.778\n",
      "44.811\n",
      "44.907\n",
      "44.875\n",
      "44.972\n",
      "45.004\n",
      "45.133\n",
      "44.939\n",
      "45.133\n",
      "45.133\n",
      "45.165\n",
      "45.262\n",
      "45.133\n",
      "45.358\n",
      "45.326\n",
      "45.358\n",
      "45.358\n",
      "45.326\n",
      "45.197\n",
      "45.358\n",
      "45.358\n",
      "45.455\n",
      "45.52\n",
      "45.487\n",
      "45.391\n",
      "45.648\n",
      "45.487\n",
      "45.681\n",
      "45.81\n",
      "45.745\n",
      "45.842\n",
      "45.874\n",
      "45.777\n",
      "45.81\n",
      "45.874\n",
      "45.842\n",
      "46.067\n",
      "45.906\n",
      "46.067\n",
      "46.196\n",
      "46.003\n",
      "46.229\n",
      "46.196\n",
      "46.035\n",
      "46.229\n",
      "46.132\n",
      "46.035\n",
      "46.229\n",
      "46.1\n",
      "46.293\n",
      "46.454\n",
      "46.293\n",
      "46.422\n",
      "46.454\n",
      "46.39\n",
      "46.68\n",
      "46.809\n",
      "46.712\n",
      "46.841\n",
      "46.809\n",
      "46.776\n",
      "47.034\n",
      "46.873\n",
      "46.873\n",
      "47.066\n",
      "46.873\n",
      "47.131\n",
      "46.809\n",
      "46.712\n",
      "46.873\n",
      "46.97\n",
      "47.131\n",
      "47.034\n",
      "47.099\n",
      "47.228\n",
      "47.26\n",
      "47.292\n",
      "47.518\n",
      "47.356\n",
      "47.324\n",
      "47.421\n",
      "47.356\n",
      "47.582\n",
      "47.808\n",
      "47.453\n",
      "47.55\n",
      "47.679\n",
      "47.679\n",
      "47.808\n",
      "47.808\n",
      "47.711\n",
      "47.646\n",
      "47.743\n",
      "47.969\n",
      "47.84\n",
      "47.775\n",
      "47.872\n",
      "47.969\n",
      "47.872\n",
      "47.84\n",
      "48.001\n",
      "47.84\n",
      "47.904\n",
      "48.001\n",
      "47.743\n",
      "47.904\n",
      "48.033\n",
      "47.775\n",
      "47.775\n",
      "47.808\n",
      "47.84\n",
      "47.872\n",
      "47.904\n",
      "47.808\n",
      "47.872\n",
      "47.872\n",
      "48.065\n",
      "47.937\n",
      "47.969\n",
      "48.033\n",
      "47.937\n",
      "47.937\n",
      "48.001\n",
      "47.743\n",
      "48.065\n",
      "47.969\n",
      "47.904\n",
      "48.098\n",
      "47.969\n",
      "48.098\n",
      "48.065\n",
      "48.001\n",
      "48.098\n",
      "48.065\n",
      "48.13\n",
      "48.13\n",
      "48.098\n",
      "48.065\n",
      "48.162\n",
      "48.13\n",
      "48.291\n",
      "48.227\n",
      "48.227\n",
      "48.259\n",
      "48.227\n",
      "48.452\n",
      "48.355\n",
      "48.42\n",
      "48.452\n",
      "48.517\n",
      "48.388\n",
      "48.517\n",
      "48.517\n",
      "48.517\n",
      "48.549\n",
      "48.646\n",
      "48.71\n",
      "48.807\n",
      "48.678\n",
      "48.742\n",
      "48.71\n",
      "48.678\n",
      "48.742\n",
      "48.742\n",
      "48.839\n",
      "48.871\n",
      "48.774\n",
      "49.0\n",
      "48.774\n",
      "49.0\n",
      "49.0\n",
      "48.936\n",
      "48.936\n",
      "49.129\n",
      "48.968\n",
      "49.161\n",
      "49.097\n",
      "49.064\n",
      "49.226\n",
      "48.968\n",
      "49.032\n",
      "49.032\n",
      "48.871\n",
      "49.0\n",
      "48.936\n",
      "49.0\n",
      "49.097\n",
      "49.0\n",
      "49.032\n",
      "48.936\n",
      "48.903\n",
      "48.968\n",
      "49.064\n",
      "49.129\n",
      "49.064\n",
      "49.193\n",
      "49.226\n",
      "49.354\n",
      "49.322\n",
      "49.451\n",
      "49.677\n",
      "49.419\n",
      "49.483\n",
      "49.645\n",
      "49.387\n",
      "49.516\n",
      "49.677\n",
      "49.387\n",
      "49.677\n",
      "49.645\n",
      "49.516\n",
      "49.741\n",
      "49.741\n",
      "49.612\n",
      "49.741\n",
      "49.709\n",
      "49.709\n",
      "49.773\n",
      "49.773\n",
      "49.709\n",
      "49.612\n",
      "49.645\n",
      "49.677\n",
      "49.516\n",
      "49.612\n",
      "49.451\n",
      "49.387\n",
      "49.483\n",
      "49.387\n",
      "49.258\n",
      "49.419\n",
      "49.354\n",
      "49.419\n",
      "49.451\n",
      "49.29\n",
      "49.258\n",
      "49.29\n",
      "49.129\n",
      "49.387\n",
      "49.322\n",
      "49.322\n",
      "49.612\n",
      "49.387\n",
      "49.483\n",
      "49.58\n",
      "49.322\n",
      "49.58\n",
      "49.741\n",
      "49.516\n",
      "49.741\n",
      "49.516\n",
      "49.548\n",
      "49.645\n",
      "49.58\n",
      "49.548\n",
      "49.548\n",
      "49.483\n",
      "49.419\n",
      "49.387\n",
      "49.226\n",
      "49.387\n",
      "49.419\n",
      "49.354\n",
      "49.516\n",
      "49.354\n",
      "49.354\n",
      "49.548\n",
      "49.354\n",
      "49.451\n",
      "49.548\n",
      "49.58\n",
      "49.322\n",
      "49.548\n",
      "49.548\n",
      "49.322\n",
      "49.419\n",
      "49.387\n",
      "49.258\n",
      "49.419\n",
      "49.419\n",
      "49.226\n",
      "49.387\n",
      "49.29\n",
      "49.29\n",
      "49.451\n",
      "49.258\n",
      "49.129\n",
      "49.29\n",
      "49.354\n",
      "49.226\n",
      "49.354\n",
      "49.354\n",
      "49.451\n",
      "49.419\n",
      "49.354\n",
      "49.387\n",
      "49.483\n",
      "49.516\n",
      "49.483\n",
      "49.516\n",
      "49.645\n",
      "49.709\n",
      "49.483\n",
      "49.709\n",
      "49.709\n",
      "49.677\n",
      "49.612\n",
      "49.516\n",
      "49.612\n",
      "49.741\n",
      "49.612\n",
      "49.677\n",
      "49.935\n",
      "49.773\n",
      "49.999\n",
      "49.902\n",
      "49.87\n",
      "50.031\n",
      "49.967\n",
      "50.096\n",
      "49.902\n",
      "49.838\n",
      "49.967\n",
      "49.773\n",
      "49.773\n",
      "49.935\n",
      "49.806\n",
      "49.87\n",
      "50.031\n",
      "49.935\n",
      "49.935\n",
      "49.87\n",
      "49.935\n",
      "49.935\n",
      "49.773\n",
      "49.741\n",
      "49.773\n",
      "49.709\n",
      "49.87\n",
      "49.773\n",
      "49.806\n",
      "49.967\n",
      "49.709\n",
      "49.709\n",
      "49.967\n",
      "49.677\n",
      "49.677\n",
      "49.935\n",
      "50.031\n",
      "50.063\n",
      "49.999\n",
      "49.806\n",
      "50.063\n",
      "50.16\n",
      "50.16\n",
      "50.096\n",
      "49.935\n",
      "50.16\n",
      "50.16\n",
      "50.321\n",
      "50.289\n",
      "50.354\n",
      "50.257\n",
      "50.321\n",
      "50.354\n",
      "50.386\n",
      "50.289\n",
      "50.321\n",
      "50.386\n",
      "50.547\n",
      "50.386\n",
      "50.515\n",
      "50.321\n",
      "50.45\n",
      "50.611\n",
      "50.482\n",
      "50.579\n",
      "50.418\n",
      "50.676\n",
      "50.482\n",
      "50.708\n",
      "TCLab disconnected successfully.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.integrate import odeint\n",
    "import tclab\n",
    "import time\n",
    "\n",
    "n = 600  # Number of seconds (10 min)\n",
    "tm = np.linspace(0,n,n+1) \n",
    "\n",
    "# data from TCL\n",
    "lab = tclab.TCLab()\n",
    "T1 = [lab.T1]\n",
    "lab.Q1(50)\n",
    "for i in range(n):\n",
    "    time.sleep(1.0)\n",
    "    print(lab.T1)\n",
    "    T1.append(lab.T1)\n",
    "lab.close()\n",
    "\n",
    "# simulation for the TCL\n",
    "def labsim(TC,t):\n",
    "    U = 10.0\n",
    "    A = 0.0012\n",
    "    Cp = 500\n",
    "    m = 0.004\n",
    "    alpha = 0.01\n",
    "    Ta = 23\n",
    "    dTCdt = (U*A*(Ta-TC) + alpha*50)/(m*Cp)\n",
    "    return dTCdt\n",
    "Tsim = odeint(labsim,23,tm)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "id": "nSfnsO6AHrYt"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(1)\n",
    "plt.plot(tm,Tsim,'b-',label='Simulated')\n",
    "plt.plot(tm,T1,'r.',label='Measured')\n",
    "plt.ylabel('Temperature (degC)')\n",
    "plt.xlabel('Time (sec)')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "qlVdhHpfHrbU"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "56r02O2SHk6D"
   },
   "source": [
    "# Radiative Heat Transfer\n",
    "\n",
    "Models are just that: models. In reality, there are other ways heat is lost in our system. One other method we may wish to account for is radiative heat losses. We can update out model accordingly:\n",
    "\n",
    "$$m c_p \\frac{dT}{dt} = UA(T_a-T) + + \\epsilon \\sigma A (T_{\\infty}^4 - T^4) \\alpha Q $$\n",
    "\n",
    "where $\\epsilon=0.9$ is the emissivity coefficient and $\\sigma=5.67 \\cdot 10^{-8} W/m^2K^4$ is the Stefan-Boltzmann constant.\n",
    "\n",
    "Solve the above differential equation and compare to the collected data from above and the convection-only model.\n",
    "\n",
    "Does accounting for radiation change the model significantly? "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "id": "X_zA75s_Hk6R"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "TCLab version 0.4.9\n",
      "Arduino Leonardo connected on port COM3 at 115200 baud.\n",
      "TCLab Firmware 3.0.0 Arduino Leonardo/Micro.\n",
      "28.504\n",
      "28.472\n",
      "28.568\n",
      "28.568\n",
      "28.568\n",
      "28.729\n",
      "28.697\n",
      "28.697\n",
      "28.633\n",
      "28.826\n",
      "28.504\n",
      "28.762\n",
      "28.923\n",
      "29.116\n",
      "29.374\n",
      "29.406\n",
      "29.406\n",
      "29.567\n",
      "29.729\n",
      "29.793\n",
      "29.922\n",
      "30.051\n",
      "30.051\n",
      "30.244\n",
      "30.341\n",
      "30.566\n",
      "30.728\n",
      "30.824\n",
      "31.018\n",
      "31.05\n",
      "31.34\n",
      "31.533\n",
      "31.662\n",
      "31.759\n",
      "31.888\n",
      "31.984\n",
      "32.178\n",
      "32.274\n",
      "32.307\n",
      "32.661\n",
      "32.822\n",
      "32.983\n",
      "33.112\n",
      "33.209\n",
      "33.241\n",
      "33.467\n",
      "33.692\n",
      "33.854\n",
      "33.95\n",
      "34.208\n",
      "34.24\n",
      "34.498\n",
      "34.53\n",
      "34.82\n",
      "34.82\n",
      "35.014\n",
      "35.11\n",
      "35.175\n",
      "35.368\n",
      "35.529\n",
      "35.755\n",
      "35.787\n",
      "35.98\n",
      "36.109\n",
      "36.271\n",
      "36.496\n",
      "36.528\n",
      "36.754\n",
      "36.883\n",
      "36.979\n",
      "37.076\n",
      "37.173\n",
      "37.431\n",
      "37.463\n",
      "37.624\n",
      "37.785\n",
      "37.753\n",
      "37.946\n",
      "38.107\n",
      "38.172\n",
      "38.333\n",
      "38.43\n",
      "38.526\n",
      "38.72\n",
      "38.752\n",
      "38.913\n",
      "39.01\n",
      "39.171\n",
      "39.139\n",
      "39.332\n",
      "39.396\n",
      "39.687\n",
      "39.719\n",
      "39.912\n",
      "40.009\n",
      "40.138\n",
      "40.299\n",
      "40.331\n",
      "40.428\n",
      "40.589\n",
      "40.653\n",
      "40.911\n",
      "41.008\n",
      "40.976\n",
      "41.362\n",
      "41.362\n",
      "41.362\n",
      "41.652\n",
      "41.652\n",
      "41.685\n",
      "41.878\n",
      "41.91\n",
      "42.039\n",
      "42.232\n",
      "42.232\n",
      "42.361\n",
      "42.394\n",
      "42.522\n",
      "42.684\n",
      "42.813\n",
      "42.813\n",
      "42.941\n",
      "43.006\n",
      "42.974\n",
      "43.231\n",
      "43.264\n",
      "43.231\n",
      "43.393\n",
      "43.554\n",
      "43.521\n",
      "43.554\n",
      "43.65\n",
      "43.779\n",
      "43.844\n",
      "43.973\n",
      "44.037\n",
      "44.198\n",
      "44.198\n",
      "44.327\n",
      "44.295\n",
      "44.392\n",
      "44.553\n",
      "44.553\n",
      "44.682\n",
      "44.714\n",
      "44.778\n",
      "44.811\n",
      "44.907\n",
      "44.972\n",
      "44.939\n",
      "45.068\n",
      "45.229\n",
      "45.229\n",
      "45.262\n",
      "45.358\n",
      "45.391\n",
      "45.552\n",
      "45.52\n",
      "45.52\n",
      "45.681\n",
      "45.906\n",
      "45.777\n",
      "45.777\n",
      "45.906\n",
      "46.067\n",
      "46.1\n",
      "46.164\n",
      "46.293\n",
      "46.261\n",
      "46.39\n",
      "46.454\n",
      "46.519\n",
      "46.454\n",
      "46.486\n",
      "46.647\n",
      "46.647\n",
      "46.712\n",
      "46.776\n",
      "46.809\n",
      "46.809\n",
      "46.905\n",
      "46.97\n",
      "47.163\n",
      "47.195\n",
      "47.228\n",
      "47.389\n",
      "47.292\n",
      "47.26\n",
      "47.421\n",
      "47.356\n",
      "47.453\n",
      "47.518\n",
      "47.518\n",
      "47.518\n",
      "47.679\n",
      "47.743\n",
      "47.711\n",
      "47.743\n",
      "47.808\n",
      "47.84\n",
      "47.808\n",
      "47.775\n",
      "47.872\n",
      "47.872\n",
      "47.904\n",
      "47.969\n",
      "47.969\n",
      "48.13\n",
      "47.937\n",
      "48.13\n",
      "48.162\n",
      "48.098\n",
      "48.13\n",
      "48.13\n",
      "48.323\n",
      "48.42\n",
      "48.355\n",
      "48.484\n",
      "48.549\n",
      "48.646\n",
      "48.71\n",
      "48.774\n",
      "48.774\n",
      "48.936\n",
      "48.936\n",
      "48.839\n",
      "48.839\n",
      "48.903\n",
      "49.0\n",
      "49.064\n",
      "49.064\n",
      "49.0\n",
      "49.097\n",
      "49.161\n",
      "49.226\n",
      "49.322\n",
      "49.354\n",
      "49.387\n",
      "49.419\n",
      "49.419\n",
      "49.451\n",
      "49.322\n",
      "49.387\n",
      "49.516\n",
      "49.516\n",
      "49.483\n",
      "49.451\n",
      "49.548\n",
      "49.58\n",
      "49.516\n",
      "49.709\n",
      "49.612\n",
      "49.677\n",
      "49.741\n",
      "49.902\n",
      "49.773\n",
      "49.838\n",
      "49.967\n",
      "50.031\n",
      "49.999\n",
      "49.967\n",
      "50.031\n",
      "50.063\n",
      "50.063\n",
      "50.128\n",
      "50.354\n",
      "50.257\n",
      "50.289\n",
      "50.289\n",
      "50.386\n",
      "50.354\n",
      "50.354\n",
      "50.644\n",
      "50.611\n",
      "50.676\n",
      "50.644\n",
      "50.644\n",
      "50.611\n",
      "50.611\n",
      "50.676\n",
      "50.644\n",
      "50.611\n",
      "50.74\n",
      "50.644\n",
      "50.611\n",
      "50.708\n",
      "50.611\n",
      "50.708\n",
      "50.676\n",
      "50.74\n",
      "50.837\n",
      "50.708\n",
      "50.772\n",
      "50.74\n",
      "50.708\n",
      "50.708\n",
      "50.644\n",
      "50.805\n",
      "50.74\n",
      "50.805\n",
      "50.901\n",
      "50.998\n",
      "50.901\n",
      "50.934\n",
      "51.063\n",
      "51.063\n",
      "51.095\n",
      "51.03\n",
      "51.063\n",
      "51.224\n",
      "51.224\n",
      "51.32\n",
      "51.224\n",
      "51.32\n",
      "51.288\n",
      "51.256\n",
      "51.353\n",
      "51.288\n",
      "51.449\n",
      "51.288\n",
      "51.449\n",
      "51.385\n",
      "51.449\n",
      "51.417\n",
      "51.481\n",
      "51.449\n",
      "51.578\n",
      "51.578\n",
      "51.449\n",
      "51.739\n",
      "51.643\n",
      "51.643\n",
      "51.804\n",
      "51.804\n",
      "51.804\n",
      "51.868\n",
      "51.868\n",
      "51.965\n",
      "51.933\n",
      "51.965\n",
      "51.933\n",
      "51.997\n",
      "52.029\n",
      "51.997\n",
      "51.997\n",
      "52.029\n",
      "51.933\n",
      "51.997\n",
      "51.997\n",
      "51.997\n",
      "51.933\n",
      "51.997\n",
      "51.965\n",
      "51.965\n",
      "51.997\n",
      "52.094\n",
      "52.029\n",
      "52.094\n",
      "52.19\n",
      "51.933\n",
      "52.094\n",
      "51.997\n",
      "51.997\n",
      "52.287\n",
      "52.223\n",
      "52.352\n",
      "52.319\n",
      "52.319\n",
      "52.352\n",
      "52.352\n",
      "52.319\n",
      "52.287\n",
      "52.416\n",
      "52.19\n",
      "52.319\n",
      "52.19\n",
      "52.255\n",
      "52.255\n",
      "52.19\n",
      "52.126\n",
      "52.158\n",
      "52.126\n",
      "52.223\n",
      "52.223\n",
      "52.19\n",
      "52.319\n",
      "52.352\n",
      "52.255\n",
      "52.319\n",
      "52.287\n",
      "52.223\n",
      "52.319\n",
      "52.319\n",
      "52.384\n",
      "52.287\n",
      "52.319\n",
      "52.319\n",
      "52.287\n",
      "52.319\n",
      "52.319\n",
      "52.319\n",
      "52.448\n",
      "52.48\n",
      "52.48\n",
      "52.48\n",
      "52.48\n",
      "52.352\n",
      "52.416\n",
      "52.255\n",
      "52.287\n",
      "52.287\n",
      "52.352\n",
      "52.352\n",
      "52.319\n",
      "52.319\n",
      "52.48\n",
      "52.545\n",
      "52.577\n",
      "52.642\n",
      "52.577\n",
      "52.771\n",
      "52.706\n",
      "52.642\n",
      "52.674\n",
      "52.577\n",
      "52.642\n",
      "52.674\n",
      "52.609\n",
      "52.771\n",
      "52.642\n",
      "52.642\n",
      "52.674\n",
      "52.738\n",
      "52.771\n",
      "52.803\n",
      "52.706\n",
      "52.706\n",
      "52.932\n",
      "52.803\n",
      "52.932\n",
      "52.803\n",
      "52.996\n",
      "52.964\n",
      "52.996\n",
      "53.061\n",
      "52.996\n",
      "53.093\n",
      "52.964\n",
      "52.964\n",
      "53.061\n",
      "52.964\n",
      "52.932\n",
      "52.996\n",
      "52.867\n",
      "52.899\n",
      "52.867\n",
      "52.932\n",
      "52.932\n",
      "52.899\n",
      "53.028\n",
      "53.061\n",
      "53.125\n",
      "53.125\n",
      "53.157\n",
      "53.028\n",
      "53.125\n",
      "53.125\n",
      "53.254\n",
      "53.254\n",
      "53.028\n",
      "53.157\n",
      "53.254\n",
      "53.254\n",
      "53.318\n",
      "53.351\n",
      "53.447\n",
      "53.415\n",
      "53.544\n",
      "53.641\n",
      "53.512\n",
      "53.608\n",
      "53.512\n",
      "53.608\n",
      "53.576\n",
      "53.608\n",
      "53.641\n",
      "53.641\n",
      "53.576\n",
      "53.576\n",
      "53.673\n",
      "53.544\n",
      "53.608\n",
      "53.608\n",
      "53.447\n",
      "53.576\n",
      "53.318\n",
      "53.415\n",
      "53.479\n",
      "53.351\n",
      "53.447\n",
      "53.415\n",
      "53.415\n",
      "53.415\n",
      "53.383\n",
      "53.512\n",
      "53.447\n",
      "53.318\n",
      "53.415\n",
      "53.383\n",
      "53.318\n",
      "53.383\n",
      "53.351\n",
      "53.544\n",
      "53.479\n",
      "53.447\n",
      "53.318\n",
      "53.286\n",
      "53.254\n",
      "53.157\n",
      "53.157\n",
      "52.964\n",
      "53.061\n",
      "53.061\n",
      "52.996\n",
      "53.286\n",
      "52.996\n",
      "53.286\n",
      "53.286\n",
      "53.415\n",
      "53.479\n",
      "53.318\n",
      "53.254\n",
      "53.286\n",
      "53.254\n",
      "53.254\n",
      "53.222\n",
      "53.286\n",
      "53.254\n",
      "53.286\n",
      "53.286\n",
      "53.254\n",
      "53.254\n",
      "53.254\n",
      "53.254\n",
      "53.254\n",
      "53.318\n",
      "53.383\n",
      "53.415\n",
      "53.447\n",
      "53.383\n",
      "53.383\n",
      "53.415\n",
      "53.222\n",
      "53.286\n",
      "53.222\n",
      "53.318\n",
      "53.222\n",
      "53.189\n",
      "53.093\n",
      "52.899\n",
      "52.996\n",
      "52.867\n",
      "52.964\n",
      "52.899\n",
      "52.771\n",
      "52.867\n",
      "52.867\n",
      "52.932\n",
      "52.932\n",
      "52.899\n",
      "52.803\n",
      "52.899\n",
      "52.932\n",
      "52.835\n",
      "52.932\n",
      "52.932\n",
      "52.803\n",
      "52.867\n",
      "52.932\n",
      "52.771\n",
      "53.028\n",
      "52.996\n",
      "53.125\n",
      "53.286\n",
      "53.222\n",
      "53.222\n",
      "53.286\n",
      "53.222\n",
      "53.351\n",
      "53.286\n",
      "53.318\n",
      "53.318\n",
      "53.254\n",
      "53.447\n",
      "53.125\n",
      "53.286\n",
      "53.222\n",
      "53.222\n",
      "53.351\n",
      "53.286\n",
      "TCLab disconnected successfully.\n"
     ]
    }
   ],
   "source": [
    "n = 600  # Number of second time points (10 min)\n",
    "\n",
    "# collect data if TCLab is connected\n",
    "try:\n",
    "    lab = tclab.TCLab()\n",
    "    T1 = [lab.T1]\n",
    "    lab.Q1(50)\n",
    "    for i in range(n):\n",
    "        time.sleep(1)\n",
    "        print(lab.T1)\n",
    "        T1.append(lab.T1)\n",
    "    lab.close()\n",
    "    connected = True\n",
    "except:\n",
    "    print('Connect TCLab to Get Data')\n",
    "    connected = False\n",
    "\n",
    "# simulation\n",
    "U = 5.0\n",
    "A = 0.0012\n",
    "alpha = 0.01\n",
    "eps = 0.9\n",
    "sigma = 5.67e-8\n",
    "Ta = 23\n",
    "Cp = 500\n",
    "m = 0.004\n",
    "TaK = Ta + 273.15\n",
    "def labsim(TC,t):\n",
    "    TK = TC + 273.15\n",
    "    dTCdt = (U*A*(Ta-TC) + sigma*eps*A*(TaK**4-TK**4) + alpha*50)/(m*Cp)\n",
    "    return dTCdt\n",
    "\n",
    "tm = np.linspace(0,n,n+1) # Time values\n",
    "Tsim = odeint(labsim,23,tm)\n",
    "\n",
    "# calculate losses from conv and rad\n",
    "conv = U*A*(Ta-Tsim)\n",
    "rad = sigma*eps*A*(TaK**4-(Tsim+273.15)**4)\n",
    "loss = conv+rad\n",
    "gain = alpha*50\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "id": "GgxqlebmHtBs"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x1dc6d3407c8>"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(1)\n",
    "plt.plot(tm,Tsim,'b-',label='Simulated')\n",
    "if connected:\n",
    "    plt.plot(tm,T1,'r.',label='Measured')\n",
    "plt.ylabel(r'Temperature ($^oC$)')\n",
    "plt.xlabel('Time (sec)')\n",
    "plt.title('Heat Lost VS Time')\n",
    "plt.legend()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {
    "id": "OOTFXH0UHtEt"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(tm,conv,'b:',label='Convection')\n",
    "plt.plot(tm,rad,'r:',label='Radiation')\n",
    "plt.plot(tm,loss,'m-',label='Total Loss')\n",
    "plt.text(150,-0.1,'Heater input = '+str(gain)+' W')\n",
    "plt.ylabel(r'Heat Lost (W)')\n",
    "plt.legend(loc=3)\n",
    "plt.xlabel('Time (sec)')\n",
    "plt.title('Heat Lost VS Time')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "EoSyg6hdHubJ"
   },
   "source": [
    "# Lab 2, Part b\n",
    "\n",
    "In this lab, you will\n",
    "\n",
    "* Convert between voltage signal, discrete levels and temperature for the temperature sensor.\n",
    "\n",
    "The two temperature sensors on the TCLab are TMP36GZ thermistors (e.g. resistors with temperature-sensitive resistance) that report output voltage (mV) that is linearly proportional to temperature:\n",
    "\n",
    "$$T ^{\\circ}C = 0.1mV -50 $$\n",
    "\n",
    "TMP36 sensor accuracy is $\\pm 1^{\\circ}C$ at $25^{\\circ}C$ and $\\pm 2^{\\circ}C$ over the range $-40^{\\circ}C$ to $150^{\\circ}C$.\n",
    "\n",
    "This is the equivalent of a **calibration curve** for the thermistor. You do not need to recalculate the calibration curve for each experiment using these types of sensors.\n",
    "\n",
    "The mV is read on the Arduino with a 10-bit Analog to Digital Converter (ADC). There are $2^{10}$ discrete levels (DL) with a 10-bit ADC between 0 and 3300 mV. The Arduino reports a DL integer between 0 and 1023. This is converted to mV with $mV=DL \\frac{3300}{1024}$. The following is a code segment from the firmware (C code) that is loaded on the Arduino:\n",
    "\n",
    "```c\n",
    "// Arduino code tclab.ino\n",
    "const int pinT1   = 0;\n",
    "const int pinT2   = 2;\n",
    "float mV = 0.0;\n",
    "float degC = 0.0;\n",
    "for (int i = 0; i < n; i++) {\n",
    "  mV = (float) analogRead(pinT1) * (3300.0/1024.0);\n",
    "  degC = degC + (mV - 500.0)/10.0;\n",
    "}\n",
    "degC = degC / float(n);  \n",
    "Serial.println(degC);\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "CJ1Ska5DH9rB"
   },
   "source": [
    "# Exercise 1:\n",
    "\n",
    "Answer the following:\n",
    "\n",
    "* What is the gain, zero, and span of the TMP36 thermistor?\n",
    "* What mV signal corresponds to $25^{\\circ}C$?\n",
    "* What mV signal corresponds to $80^{\\circ}C$?\n",
    "* What temperature corresponds to a 0.5V signal?\n",
    "* What temperature corresponds to a 1.2 V signal?\n",
    "* Print the current temperature for $T_1$ and $T_2$ in Celsius and millivolts."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "id": "q02ovGuFICuO"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Part A\n",
      "Gain =  10.0\n",
      "Zero =  -40 degrees Celcius =100.0\n",
      "Span =  -40 degrees Celcius =100.0 [mV] to 150 degrees Celcius =2000.0 [mV]\n",
      " \n",
      "Part B\n",
      "mV at 25 degrees Celcius =750.0 [mV]\n",
      " \n",
      "Part C\n",
      "mV at 80 degrees Celcius =1300.0 [mV]\n",
      " \n",
      "Part D\n",
      "Temperature at 0.5V =0.0 degrees Celcius\n",
      " \n",
      "Part E\n",
      "Temperature at 1.2V =70.0 degrees Celcius\n",
      "TCLab version 0.4.9\n",
      "Arduino Leonardo connected on port COM3 at 115200 baud.\n",
      "TCLab Firmware 3.0.0 Arduino Leonardo/Micro.\n",
      "Part F\n",
      "T1 =28.343 degrees Celcius\n",
      "T1 =783 mV\n",
      "T2 =28.633 degrees Celcius\n",
      "T2 =786 mV\n",
      "TCLab disconnected successfully.\n"
     ]
    }
   ],
   "source": [
    "def T(mV):\n",
    "    return round(0.1*mV-50.0,1)\n",
    "\n",
    "def mV(T):\n",
    "    return round((T+50.0)*10.0,2)\n",
    "\n",
    "print('Part A')\n",
    "\n",
    "\n",
    "KM = (2000 - 100) / (150 - (-40)) # mV / *C\n",
    "\n",
    "print('Gain = ', KM)\n",
    "print('Zero = ' , '-40 degrees Celcius =' + str(mV(-40)))\n",
    "\n",
    "print('Span = ', '-40 degrees Celcius =' + str(mV(-40)), \"[mV]\",'to 150 degrees Celcius =' + str(mV(150)), \"[mV]\")\n",
    "\n",
    "\n",
    "print(' ')\n",
    "\n",
    "print('Part B')\n",
    "print('mV at 25 degrees Celcius =' + str(mV(25)), \"[mV]\")\n",
    "\n",
    "print(' ')\n",
    "\n",
    "print('Part C')\n",
    "print('mV at 80 degrees Celcius =' + str(mV(80)), \"[mV]\")\n",
    "\n",
    "print(' ')\n",
    "\n",
    "print('Part D')\n",
    "print('Temperature at 0.5V =' + str(T(0.5*1000)), 'degrees Celcius')\n",
    "\n",
    "print(' ')\n",
    "\n",
    "print('Part E')\n",
    "print('Temperature at 1.2V =' + str(T(1.2*1000)), 'degrees Celcius')\n",
    "\n",
    "import tclab\n",
    "lab = tclab.TCLab()\n",
    "T1 = lab.T1\n",
    "T2 = lab.T2\n",
    "T1mV = (T1+50.0)*10.0\n",
    "T2mV = (T2+50.0)*10.0\n",
    "\n",
    "print('Part F')\n",
    "print('T1 ='+str(T1)+' degrees Celcius')\n",
    "print('T1 ='+str(round(T1mV))+' mV')\n",
    "print('T2 ='+str(T2)+' degrees Celcius')\n",
    "print('T2 ='+str(round(T2mV))+' mV')\n",
    "lab.close()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "iXrIVu4SIDL6"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "eGRJ2jcKIDOx"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "h8ShOHaRIDXu"
   },
   "source": [
    "# Exercise 2:\n",
    "\n",
    "A first-order process has a gain of $10^{\\circ}C/\\%$ and a lag constant of 45 s. The initial steady-state temperature is $50^{\\circ}C$. Simulate a 5-minute unit step-change response to the system and plot the *exact* temperature. Temperature measurements are collected every second. As the temperature is being measured using a TMP36 thermistor, also plot the following:\n",
    "\n",
    "* The discrete levels (DL) read by the Arduino (*integers only*).\n",
    "* The mV output from the thermistor (*integers only*)\n",
    "* The *measured* temperature (discrete values)\n",
    "\n",
    "Calculate the mean squared error of the measured temperature values and the exact temperature values, the rounding error due to quantization.\n",
    "\n",
    "Repeat the experiment with random noise added to your measurements with a scale of $1^{\\circ}C$. Plot the exact and measured temperature, the DLs, and the voltage. Calculate the mean squared error and compare with the rounding error due to quantization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "_CRy6PJkIFNE"
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [],
   "name": "Lab2.ipynb",
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
